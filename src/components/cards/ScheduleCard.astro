---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

interface Props {
    title: string;
    description: string;
    days: string[];
    time: string;
    location: {
        name: string;
        url: string;
    };
    image: string;
    difficulty: "easy" | "medium" | "hard";
}

const { title, description, days, time, location, image, difficulty } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/images/**/*.{jpeg,jpg,png,gif,webp}');
if (!images[image]) {
  throw new Error(`Image ${image} not found`);
}
const imagePath = await images[image]();

const difficultyDots = {
    easy: [{ color: "bg-green-500" }],
    medium: [{ color: "bg-yellow-500" }, { color: "bg-yellow-500" }],
    hard: [{ color: "bg-red-500" }, { color: "bg-red-500" }, { color: "bg-red-500" }]
};
---

<div class="flex flex-col justify-start items-center border rounded h-full">
    <Image src={imagePath.default} alt={title} class="w-full aspect-video object-cover" />
    <div class="flex flex-col gap-1 items-center justify-center my-4">
        <h3 class="text-2xl font-black text-center">{title}</h3>
        <div class="flex gap-1">
        {difficultyDots[difficulty].map(dot => (
            <div class={`h-2 w-2 rounded-full ${dot.color}`} />
        ))}
        </div>
    </div>
    <div class="text-center text-sm px-2 text-neutral-500 leading-4 my-1 grow">
        {description}
    </div>
    <hr class="w-1/2 my-4" />
    <div class="flex gap-4 text-center font-semibold">
        {days.map((day) => (
            <p>{day}</p>
        ))}
    </div>
    <div class="flex gap-4 text-center font-bold">
        {time}
    </div>
    <hr class="w-1/2 my-4" />
    <a href={location.url} class="text-rose-500 hover:underline underline-offset-2 flex gap-2 items-center mt-4 mb-8">
        <Icon name="mdi:globe" />
        {location.name}
    </a>
</div>
